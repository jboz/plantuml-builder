name: Publish package to the Maven Central Repository
on:
  release:
    types: [created]

jobs:
  publish:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Maven Central Repository
        uses: actions/setup-java@v3
        with:
          java-version: "19"
          distribution: "adopt"
          server-id: ossrh
          server-username: MAVEN_USERNAME
          server-password: MAVEN_PASSWORD
          gpg-private-key: ${{ secrets.MAVEN_GPG_PRIVATE_KEY }}
          gpg-keyname: GPG_KEYNAME
          gpg-passphrase: GPG_PASSPHRASE
      # - name: prepare release
      #   run: |
      #     openssl aes-256-cbc -pass pass:${{ secrets.ENCRYPTION_PASSWORD }} -in .release/pubring.gpg.enc -out .release/pubring.gpg -d
      #     openssl aes-256-cbc -pass pass:${{ secrets.ENCRYPTION_PASSWORD }} -in .release/secring.gpg.enc -out .release/secring.gpg -d
      #     gpg --import .release/pubring.gpg
      #     gpg --batch --import .release/secring.gpg
      # - name: Set projects Maven version to GitHub Action GUI set version
      #   run: mvn versions:set "-DnewVersion=${{ github.event.inputs.releaseversion }}"
      # - name: Fix release java-version
      #   run: mvn -q build-helper:parse-version versions:set -DnewVersion=\${parsedVersion.majorVersion}.\${parsedVersion.minorVersion} versions:commit
      - name: Publish package to Maven Central
        run: |
          mvn --batch-mode deploy -P release
        env:
          GPG_KEYNAME: ${{ secrets.GPG_KEYNAME }}
          GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}
          MAVEN_USERNAME: ${{ secrets.OSSRH_USERNAME }}
          MAVEN_PASSWORD: ${{ secrets.OSSRH_TOKEN }}
      # - name: Set up Java for publishing to GitHub Packages
      #   uses: actions/setup-java@v3
      #   with:
      #     java-version: "19"
      #     distribution: "adopt"
      # - name: Publish to GitHub Packages
      #   run: mvn --batch-mode deploy
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      # - name: Set next development versions
      #   run: mvn -q build-helper:parse-version versions:set -DnewVersion=\${parsedVersion.majorVersion}.\${parsedVersion.nextMinorVersion}-SNAPSHOT versions:commit
